version: '3.8'

services:
  # Main MT5 Analytics API
  mt5-analytics:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./mt5_realtime_platform/backend:/app
      - ./logs:/app/logs
      - ./data:/app/data
    env_file:
      - ./mt5_realtime_platform/backend/.env
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=sqlite:///./data/trading_analytics.db
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and background tasks
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Optional: PostgreSQL (alternative to SQLite for production)
  # postgres:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: trading_analytics
  #     POSTGRES_USER: trader
  #     POSTGRES_PASSWORD: secure_password
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped

  # Optional: Nginx reverse proxy for production
  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #     - ./ssl:/etc/ssl/certs
  #   depends_on:
  #     - mt5-analytics
  #   restart: unless-stopped

volumes:
  redis_data:
  # postgres_data:  # Uncomment if using PostgreSQL

networks:
  default:
    name: mt5-analytics-network