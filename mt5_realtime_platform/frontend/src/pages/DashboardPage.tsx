import React from 'react';\nimport { motion } from 'framer-motion';\nimport { \n  ChartBarIcon,\n  ClockIcon,\n  TrendingUpIcon,\n  CurrencyDollarIcon\n} from '@heroicons/react/24/outline';\nimport { LiveHeatmap } from '../components/dashboard/LiveHeatmap';\nimport { StrategyCards } from '../components/dashboard/StrategyCards';\nimport { EdgeTimeline } from '../components/dashboard/EdgeTimeline';\nimport { LiveChart } from '../components/dashboard/LiveChart';\nimport { MarketStatus } from '../components/dashboard/MarketStatus';\nimport { useWebSocket } from '../contexts/WebSocketContext';\nimport { formatCurrency, formatPercentage } from '../utils/formatUtils';\n\nexport const DashboardPage: React.FC = () => {\n  const { liveData, edgeData, isConnected } = useWebSocket();\n\n  const statsCards = [\n    {\n      title: 'Active Patterns',\n      value: liveData?.total_patterns || 0,\n      icon: ChartBarIcon,\n      color: 'blue',\n      change: '+12%',\n      changeType: 'positive' as const\n    },\n    {\n      title: 'Significant Edges',\n      value: liveData?.significant_edges || 0,\n      icon: TrendingUpIcon,\n      color: 'green',\n      change: '+5%',\n      changeType: 'positive' as const\n    },\n    {\n      title: 'Best Edge Win Rate',\n      value: liveData?.best_edge?.win_rate ? formatPercentage(liveData.best_edge.win_rate) : 'N/A',\n      icon: ClockIcon,\n      color: 'purple',\n      subtitle: liveData?.best_edge?.time || 'No edge detected',\n      change: liveData?.best_edge?.confidence ? `${formatPercentage(liveData.best_edge.confidence)} conf.` : '',\n      changeType: 'neutral' as const\n    },\n    {\n      title: 'Active Strategies',\n      value: liveData?.active_strategies || 0,\n      icon: CurrencyDollarIcon,\n      color: 'orange',\n      change: 'Live',\n      changeType: 'neutral' as const\n    }\n  ];\n\n  const getColorClasses = (color: string) => {\n    switch (color) {\n      case 'blue':\n        return 'bg-blue-500 text-white';\n      case 'green':\n        return 'bg-green-500 text-white';\n      case 'purple':\n        return 'bg-purple-500 text-white';\n      case 'orange':\n        return 'bg-orange-500 text-white';\n      default:\n        return 'bg-gray-500 text-white';\n    }\n  };\n\n  const getChangeColor = (type: 'positive' | 'negative' | 'neutral') => {\n    switch (type) {\n      case 'positive':\n        return 'text-green-600 bg-green-100';\n      case 'negative':\n        return 'text-red-600 bg-red-100';\n      default:\n        return 'text-gray-600 bg-gray-100';\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Page header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Real-Time Analytics Dashboard</h1>\n          <p className=\"text-gray-600\">Monitor live MT5 data and statistical edges</p>\n        </div>\n        <MarketStatus />\n      </div>\n\n      {/* Stats cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        {statsCards.map((stat, index) => {\n          const IconComponent = stat.icon;\n          return (\n            <motion.div\n              key={stat.title}\n              className=\"bg-white rounded-lg shadow-lg p-6 border border-gray-200\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: index * 0.1 }}\n              whileHover={{ y: -2, transition: { duration: 0.2 } }}\n            >\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-gray-600\">{stat.title}</p>\n                  <div className=\"mt-2\">\n                    <p className=\"text-3xl font-bold text-gray-900\">{stat.value}</p>\n                    {stat.subtitle && (\n                      <p className=\"text-sm text-gray-500 mt-1\">{stat.subtitle}</p>\n                    )}\n                  </div>\n                </div>\n                <div className={`p-3 rounded-lg ${getColorClasses(stat.color)}`}>\n                  <IconComponent className=\"w-6 h-6\" />\n                </div>\n              </div>\n              \n              {stat.change && (\n                <div className=\"mt-4\">\n                  <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                    getChangeColor(stat.changeType)\n                  }`}>\n                    {stat.change}\n                  </span>\n                </div>\n              )}\n            </motion.div>\n          );\n        })}\n      </div>\n\n      {/* Main content grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Left column - Live chart */}\n        <div className=\"lg:col-span-2\">\n          <LiveChart className=\"h-96\" />\n        </div>\n\n        {/* Right column - Market info */}\n        <div className=\"space-y-6\">\n          {/* Current market data */}\n          <motion.div\n            className=\"bg-white rounded-lg shadow-lg p-6 border border-gray-200\"\n            initial={{ opacity: 0, x: 20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.5 }}\n          >\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Market Overview</h3>\n            <div className=\"space-y-3\">\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-gray-600\">Current Price:</span>\n                <span className=\"font-medium text-gray-900\">$2,045.50</span>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-gray-600\">Spread:</span>\n                <span className=\"font-medium text-gray-900\">0.15 pips</span>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-gray-600\">Volatility:</span>\n                <span className={`font-medium ${\n                  (liveData?.volatility_level || 0) > 2 ? 'text-red-600' : 'text-green-600'\n                }`}>\n                  {((liveData?.volatility_level || 0) * 100).toFixed(2)}%\n                </span>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-gray-600\">Session:</span>\n                <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n                  {liveData?.market_status === 'active' ? 'Active' : 'Closed'}\n                </span>\n              </div>\n            </div>\n          </motion.div>\n\n          {/* Connection status */}\n          <motion.div\n            className=\"bg-white rounded-lg shadow-lg p-6 border border-gray-200\"\n            initial={{ opacity: 0, x: 20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.5, delay: 0.1 }}\n          >\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">System Status</h3>\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-gray-600\">WebSocket:</span>\n                <div className=\"flex items-center space-x-2\">\n                  <div className={`w-2 h-2 rounded-full ${\n                    isConnected ? 'bg-green-400' : 'bg-red-400'\n                  }`} />\n                  <span className={`text-sm font-medium ${\n                    isConnected ? 'text-green-600' : 'text-red-600'\n                  }`}>\n                    {isConnected ? 'Connected' : 'Disconnected'}\n                  </span>\n                </div>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-gray-600\">MT5 Status:</span>\n                <span className=\"text-sm font-medium text-green-600\">Active</span>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-gray-600\">Last Update:</span>\n                <span className=\"text-sm text-gray-500\">\n                  {liveData?.timestamp ? \n                    new Date(liveData.timestamp).toLocaleTimeString() : \n                    'N/A'\n                  }\n                </span>\n              </div>\n            </div>\n          </motion.div>\n        </div>\n      </div>\n\n      {/* Win rate heatmap */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6, delay: 0.3 }}\n      >\n        <LiveHeatmap />\n      </motion.div>\n\n      {/* Edge timeline */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6, delay: 0.4 }}\n      >\n        <EdgeTimeline className=\"h-64\" />\n      </motion.div>\n\n      {/* Strategy cards */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6, delay: 0.5 }}\n      >\n        <StrategyCards />\n      </motion.div>\n\n      {/* Footer info */}\n      <motion.div\n        className=\"bg-blue-50 rounded-lg p-6 border border-blue-200\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 0.6, delay: 0.6 }}\n      >\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"flex-shrink-0\">\n            <div className=\"w-8 h-8 bg-blue-500 rounded-lg flex items-center justify-center\">\n              <span className=\"text-white font-bold text-sm\">â„¹</span>\n            </div>\n          </div>\n          <div>\n            <h3 className=\"text-sm font-medium text-blue-900\">Real-Time Analysis</h3>\n            <p className=\"text-blue-700 text-sm\">\n              This dashboard processes live MT5 tick data to identify statistical trading edges.\n              All timestamps are displayed in IST (Indian Standard Time) for your convenience.\n            </p>\n          </div>\n        </div>\n      </motion.div>\n    </div>\n  );\n};